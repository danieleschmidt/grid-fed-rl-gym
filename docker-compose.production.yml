version: '3.8'

services:
  grid-fed-rl-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: grid-fed-rl:latest
    container_name: grid-fed-rl-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - WORKERS=4
      - MAX_ENVIRONMENTS=10
      - CACHE_SIZE=1000
      - ENABLE_MONITORING=true
      - COMPLIANCE_FRAMEWORK=gdpr
      - LANGUAGE=en
      - REGION=eu
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - grid-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  grid-fed-rl-worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: grid-fed-rl:latest
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - WORKER_MODE=true
      - CACHE_SIZE=500
      - COMPLIANCE_FRAMEWORK=gdpr
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - grid-fed-rl-api
    networks:
      - grid-network
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: grid-fed-rl-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - grid-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  prometheus:
    image: prom/prometheus:latest
    container_name: grid-fed-rl-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - grid-network

  grafana:
    image: grafana/grafana:latest
    container_name: grid-fed-rl-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - grid-network

  nginx:
    image: nginx:alpine
    container_name: grid-fed-rl-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - grid-fed-rl-api
    networks:
      - grid-network

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  grid-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16